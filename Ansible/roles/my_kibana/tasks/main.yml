---
#tasks file for roles/grafana

- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: latest
    update_cache: true

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Start kibana container
  docker_container:
    name: kibana
    image: "{{ kibana_image }}"
    env:
      servername: kibana
      ELASTICSEARCH_HOSTS: "http://{{ groups['elastic'] | join('')}}:9200"
      ELASTICSEARCH_USERNAME: "{{ kibana_user }}"
      ELASTICSEARCH_PASSWORD: "{{ hostvars['kilastic']['kibana_pass'] }}"
    ports:
    - 80:5601
    log_driver: "{{ log_driver }}"
    log_options:
      max-size: "{{ log_max_size }}"
      max-file: "{{ log_max_file }}"

- name: Pause 1 minute for container start
  ansible.builtin.pause:
    minutes: 1

- name: "Check default index"
  uri:
    url: "http://localhost/api/index_patterns/default"
    method: GET
    user: "{{ elastic_user }}"
    password: "{{ elastic_pass }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json; charset=utf-8"
      kbn-xsrf: true
  register: default_index

# - name: Debug
#   debug:
#     var: default_index.json.index_pattern_id

- name: "Create index elastic-*"
  uri:
    url: "http://localhost/api/saved_objects/index-pattern"
    method: POST
    user: "{{ elastic_user }}"
    password: "{{ elastic_pass }}"
    body: '{"attributes": {"title": "elastic-*","timeFieldName" : "@timestamp"}}'
    body_format: json
    force_basic_auth: yes
    headers:
      Content-Type: "application/json; charset=utf-8"
      kbn-xsrf: true
  register: elastic_index_id
  when: not default_index.json.index_pattern_id

# - name: Debug
#   debug:
#     var: elastic_index_id.json.id
#   when: '"null" in default_index.json.index_pattern_id'

- name: "Make elastic default"
  uri:
    url: "http://localhost/api/index_patterns/default"
    method: POST
    user: "{{ elastic_user }}"
    password: "{{ elastic_pass }}"
    body: '{"index_pattern_id": "{{ elastic_index_id.json.id }}", "force": true }'
    body_format: json
    force_basic_auth: yes
    headers:
      Content-Type: "application/json; charset=utf-8"
      kbn-xsrf: true
  when: not default_index.json.index_pattern_id

- name: "Create index server-*"
  uri:
    url: "http://localhost/api/saved_objects/index-pattern"
    method: POST
    user: "{{ elastic_user }}"
    password: "{{ elastic_pass }}"
    body: '{"attributes": {"title": "{{ item }}","timeFieldName" : "@timestamp"}}'
    body_format: json
    force_basic_auth: yes
    headers:
      Content-Type: "application/json; charset=utf-8"
      kbn-xsrf: true
  with_items:
      - kibana-*
  #    - nginx-*
      - zabbix-web-*
      - zabbix-server-*
  when: not default_index.json.index_pattern_id


- name: "Set dashboard"
  uri:
    url: "http://localhost/api/saved_objects/_import"
    method: POST
    user: "{{ elastic_user }}"
    password: "{{ elastic_pass }}"
    body_format: form-multipart
    body:       
      file:
        filename: export.ndjson
    force_basic_auth: yes
    headers:
      Content-Type: "application/json; charset=utf-8"
      kbn-xsrf: true
  register: dashboard

# - name: Dashboard info
#   debug:
#     var: dashboard
